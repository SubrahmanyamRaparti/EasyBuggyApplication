apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: easybuggyapplication
spec: {}
status: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: ecr-registry-helper-secrets
  namespace: easybuggyapplication
stringData:
  AWS_ACCOUNT: "<aws_account_id>"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecr-registry-helper-cm
  namespace: easybuggyapplication
data:
  AWS_REGION: "<aws_region>"
  DOCKER_SECRET_NAME: regcred
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-registry-helper
  namespace: easybuggyapplication
spec:
  schedule: "0 */12 * * *"      # Run every 12 hours
  successfulJobsHistoryLimit: 3
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ecr-registry-helper-sa
          containers:
          - name: ecr-registry-helper
            # image: odaniait/aws-kubectl:latest
            image : subrahmanyamr/k8s-ecr-cred-updater-alpine:3
            imagePullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: ecr-registry-helper-secrets
              - configMapRef:
                  name: ecr-registry-helper-cm
            command:
              - /bin/sh
              - -c
              - |-
                aws iam list-users
                echo $AWS_REGION
                ECR_TOKEN=`aws ecr get-login-password --region ${AWS_REGION}`
                NAMESPACE_NAME=easybuggyapplication
                kubectl delete secret --ignore-not-found $DOCKER_SECRET_NAME -n $NAMESPACE_NAME
                kubectl create secret docker-registry $DOCKER_SECRET_NAME \
                --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com \
                --docker-username=AWS \
                --docker-password="${ECR_TOKEN}" \
                --namespace=$NAMESPACE_NAME
                echo "Secret was successfully updated at $(date)"
          restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-registry-helper-sa
  namespace: easybuggyapplication
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: easybuggyapplication
  name: role-full-access-to-secrets
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["regcred"]
  verbs: ["delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ecr-registry-helper-role-binding
  namespace: easybuggyapplication
subjects:
- kind: ServiceAccount
  name: ecr-registry-helper-sa
  namespace: easybuggyapplication
  apiGroup: ""
roleRef:
  kind: Role
  name: role-full-access-to-secrets
  apiGroup: ""
---